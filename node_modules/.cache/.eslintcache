[{"/home/Mohita/app-facecheck-with-reactjs/src/index.tsx":"1","/home/Mohita/app-facecheck-with-reactjs/src/reportWebVitals.ts":"2","/home/Mohita/app-facecheck-with-reactjs/src/App.tsx":"3","/home/Mohita/app-facecheck-with-reactjs/src/pages/index.ts":"4","/home/Mohita/app-facecheck-with-reactjs/src/themes/index.ts":"5","/home/Mohita/app-facecheck-with-reactjs/src/themes/light-theme.ts":"6","/home/Mohita/app-facecheck-with-reactjs/src/themes/colors.ts":"7","/home/Mohita/app-facecheck-with-reactjs/src/pages/HomePage.tsx":"8","/home/Mohita/app-facecheck-with-reactjs/src/pages/AuthPage.tsx":"9","/home/Mohita/app-facecheck-with-reactjs/src/pages/NotFoundPage.tsx":"10","/home/Mohita/app-facecheck-with-reactjs/src/components/index.ts":"11","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/index.ts":"12","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/appBarStyles.ts":"13","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/inputStyles.ts":"14","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/typographyStyles.ts":"15","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/buttonStyles.ts":"16","/home/Mohita/app-facecheck-with-reactjs/src/themes/components/drawerStyles.ts":"17","/home/Mohita/app-facecheck-with-reactjs/src/components/layout/index.ts":"18","/home/Mohita/app-facecheck-with-reactjs/src/components/table/index.ts":"19","/home/Mohita/app-facecheck-with-reactjs/src/components/form/index.ts":"20","/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/index.ts":"21","/home/Mohita/app-facecheck-with-reactjs/src/components/spinner/index.ts":"22","/home/Mohita/app-facecheck-with-reactjs/src/components/layout/MainLayout.tsx":"23","/home/Mohita/app-facecheck-with-reactjs/src/components/table/TableDataList.tsx":"24","/home/Mohita/app-facecheck-with-reactjs/src/components/table/AlterTable.tsx":"25","/home/Mohita/app-facecheck-with-reactjs/src/components/form/Form.tsx":"26","/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/Dialog.tsx":"27","/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/UserProfile.tsx":"28","/home/Mohita/app-facecheck-with-reactjs/src/components/spinner/Spinner.tsx":"29","/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/Alert.tsx":"30","/home/Mohita/app-facecheck-with-reactjs/src/components/watch/index.ts":"31","/home/Mohita/app-facecheck-with-reactjs/src/components/watch/Watch.jsx":"32"},{"size":532,"mtime":1684257082039,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1684257082043,"results":"35","hashOfConfig":"34"},{"size":871,"mtime":1684257082035,"results":"36","hashOfConfig":"34"},{"size":86,"mtime":1684257082043,"results":"37","hashOfConfig":"34"},{"size":57,"mtime":1684257082043,"results":"38","hashOfConfig":"34"},{"size":953,"mtime":1684257082043,"results":"39","hashOfConfig":"34"},{"size":866,"mtime":1684257082043,"results":"40","hashOfConfig":"34"},{"size":197,"mtime":1684257082043,"results":"41","hashOfConfig":"34"},{"size":770,"mtime":1684257082043,"results":"42","hashOfConfig":"34"},{"size":1182,"mtime":1684257082043,"results":"43","hashOfConfig":"34"},{"size":124,"mtime":1684257082039,"results":"44","hashOfConfig":"34"},{"size":296,"mtime":1684257082043,"results":"45","hashOfConfig":"34"},{"size":660,"mtime":1684257082043,"results":"46","hashOfConfig":"34"},{"size":1516,"mtime":1684257082043,"results":"47","hashOfConfig":"34"},{"size":340,"mtime":1684257082043,"results":"48","hashOfConfig":"34"},{"size":368,"mtime":1684257082043,"results":"49","hashOfConfig":"34"},{"size":254,"mtime":1684257082043,"results":"50","hashOfConfig":"34"},{"size":29,"mtime":1684257082039,"results":"51","hashOfConfig":"34"},{"size":60,"mtime":1684257082039,"results":"52","hashOfConfig":"34"},{"size":22,"mtime":1684257082039,"results":"53","hashOfConfig":"34"},{"size":54,"mtime":1684257082039,"results":"54","hashOfConfig":"34"},{"size":25,"mtime":1684257082039,"results":"55","hashOfConfig":"34"},{"size":3574,"mtime":1684257082039,"results":"56","hashOfConfig":"34"},{"size":2034,"mtime":1684257082039,"results":"57","hashOfConfig":"34"},{"size":3573,"mtime":1684257082039,"results":"58","hashOfConfig":"34"},{"size":7776,"mtime":1684257082039,"results":"59","hashOfConfig":"34"},{"size":1923,"mtime":1684257082039,"results":"60","hashOfConfig":"34"},{"size":4792,"mtime":1684257082039,"results":"61","hashOfConfig":"34"},{"size":101,"mtime":1684257082039,"results":"62","hashOfConfig":"34"},{"size":1520,"mtime":1684257082039,"results":"63","hashOfConfig":"34"},{"size":23,"mtime":1684257082039,"results":"64","hashOfConfig":"34"},{"size":771,"mtime":1684257082039,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f40g2q",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/Mohita/app-facecheck-with-reactjs/src/index.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/reportWebVitals.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/App.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/pages/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/light-theme.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/colors.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/pages/HomePage.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/pages/AuthPage.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/pages/NotFoundPage.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/appBarStyles.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/inputStyles.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/typographyStyles.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/buttonStyles.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/themes/components/drawerStyles.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/layout/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/table/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/form/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/spinner/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/layout/MainLayout.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/table/TableDataList.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/table/AlterTable.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/form/Form.tsx",["164"],[],"import { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { THEME_COLORS } from '../../themes/colors';\r\nimport {\r\n  TextField,\r\n  Box,\r\n  useMediaQuery,\r\n  Button,\r\n  InputAdornment,\r\n  IconButton,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { FormDialog } from '../dialogs';\r\nimport { useForm } from 'react-hook-form';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport { LoginProps } from '../../interfaces/LoginInterface';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CssTextField = styled(TextField)({\r\n  '& .MuiOutlinedInput-root': {\r\n    '& fieldset': {\r\n      borderRadius: '1.2rem',\r\n    },\r\n    borderRadius: '1.2rem',\r\n  },\r\n});\r\n\r\nconst keys_for_register = ['ASDF', 'FC02', 'FCX22', 'FCV22'];\r\n\r\ninterface Props {\r\n  login: () => void;\r\n}\r\n\r\nexport const Form = ({ login }: Props) => {\r\n  const [viewPassword, setViewPassword] = useState<boolean>(false);\r\n  const [viewConfirmPassword, setViewConfirmPassword] =\r\n    useState<boolean>(false);\r\n  const [codeEntered, setCodeEntered] = useState<string>('');\r\n  const [pageType, setPageType] = useState('login');\r\n  const [open, setOpen] = useState(false);\r\n  const [errorCode, setErrorCode] = useState(false);\r\n  const isLogin = pageType === 'login';\r\n  const isRegister = pageType === 'register';\r\n  const isNonMobile = useMediaQuery('(min-width:600px)');\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setErrorCode(false);\r\n    setCodeEntered('');\r\n  };\r\n\r\n\r\n\r\n  const changeForm = () => {\r\n    if (pageType === 'login') {\r\n      if (keys_for_register.includes(codeEntered)) {\r\n        setPageType('register');\r\n        setErrorCode(false);\r\n        setCodeEntered('');\r\n        setViewPassword(false);\r\n        handleClose();\r\n      } else {\r\n        setPageType('login');\r\n        setErrorCode(true);\r\n        setTimeout(() => {\r\n          setErrorCode(false);\r\n        }, 3000);\r\n      }\r\n    }\r\n\r\n    if (pageType === 'register') setPageType('login');\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    watch,\r\n  } = useForm<LoginProps>();\r\n\r\n  const onFormSubmit = (data: LoginProps) => {\r\n    console.log(data);\r\n    // login();\r\n  };\r\n\r\n  const password = watch('password');\r\n\r\n  return (\r\n    <>\r\n      <Box p=\"1rem 6%\" mb={1} textAlign=\"center\">\r\n        <Typography fontWeight=\"700\" variant=\"h4\" color=\"primary\">\r\n          {isLogin ? 'Inicio de sesión' : 'Registro'}\r\n        </Typography>\r\n      </Box>\r\n      <form onSubmit={handleSubmit(onFormSubmit)} noValidate>\r\n        <Box\r\n          display=\"grid\"\r\n          gap=\"20px\"\r\n          gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\r\n          sx={{\r\n            '& > div': { gridColumn: isNonMobile ? undefined : 'span 4' },\r\n          }}\r\n        >\r\n          {isRegister && (\r\n            <>\r\n              <CssTextField\r\n                label=\"Nombre\"\r\n                sx={{ gridColumn: 'span 2' }}\r\n                required\r\n                {...register('register.name', {\r\n                  required: 'Este campo es obligatorio',\r\n                })}\r\n                error={!!errors.register?.name}\r\n                helperText={errors.register?.name?.message}\r\n              />\r\n              <CssTextField\r\n                label=\"Apellidos\"\r\n                sx={{ gridColumn: 'span 2' }}\r\n                required\r\n                {...register('register.lastName', {\r\n                  required: 'Este campo es obligatorio',\r\n                })}\r\n                error={!!errors.register?.lastName}\r\n                helperText={errors.register?.lastName?.message}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          <CssTextField\r\n            label=\"Correo electrónico\"\r\n            type=\"email\"\r\n            sx={{ gridColumn: 'span 4' }}\r\n            required\r\n            {...register('email', {\r\n              required: 'Este campo es obligatorio',\r\n            })}\r\n            error={!!errors.email}\r\n            helperText={errors.email?.message}\r\n          />\r\n          <CssTextField\r\n            label=\"Contraseña\"\r\n            sx={{ gridColumn: 'span 4' }}\r\n            required\r\n            {...register('password', {\r\n              required: 'Este campo es obligatorio',\r\n            })}\r\n            error={!!errors.password}\r\n            helperText={errors.password?.message}\r\n            type={viewPassword ? 'text' : 'password'}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={() => setViewPassword(!viewPassword)}>\r\n                    {viewPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n\r\n          {isRegister && (\r\n            <CssTextField\r\n              label=\"Repita su contraseña\"\r\n              sx={{ gridColumn: 'span 4' }}\r\n              onPaste={(e) => {\r\n                e.preventDefault();\r\n                return false;\r\n              }}\r\n              required\r\n              {...register('register.repeatPassword', {\r\n                required: 'Este campo es obligatorio',\r\n                validate: (value) =>\r\n                  value === password || 'Las contraseñas no coinciden',\r\n              })}\r\n              error={!!errors.register?.repeatPassword}\r\n              helperText={errors.register?.repeatPassword?.message}\r\n              type={viewConfirmPassword ? 'text' : 'password'}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() =>\r\n                        setViewConfirmPassword(!viewConfirmPassword)\r\n                      }\r\n                    >\r\n                      {viewConfirmPassword ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n\r\n        <Button\r\n          fullWidth\r\n          type=\"submit\"\r\n          sx={{\r\n            m: '2rem 0',\r\n            p: '1rem',\r\n            borderRadius: '1.2rem',\r\n            '&:hover': {\r\n              color: '#000',\r\n              backgroundColor: THEME_COLORS.BACKGROUND_COLOR,\r\n              border: `1px solid ${THEME_COLORS.PRIMARY}`,\r\n            },\r\n          }}\r\n        >\r\n          {isLogin ? 'INICIAR SESIÓN' : 'REGISTRARSE'}\r\n        </Button>\r\n        <Box textAlign=\"end\">\r\n          <Typography\r\n            onClick={() => {\r\n              // setPageType(isLogin ? 'register' : 'login');\r\n              if (pageType === 'login') {\r\n                handleClickOpen();\r\n              } else {\r\n                setPageType('login');\r\n              }\r\n              reset();\r\n            }}\r\n            sx={{\r\n              '&:hover': {\r\n                cursor: 'pointer',\r\n              },\r\n            }}\r\n            component=\"span\"\r\n          >\r\n            {isLogin ? (\r\n              <p style={{ color: 'black' }}>\r\n                <b>Regístrarse</b>{' '}\r\n              </p>\r\n            ) : (\r\n              <p style={{ color: 'black' }}>\r\n                <b>Iniciar Sesión</b>{' '}\r\n              </p>\r\n            )}\r\n          </Typography>\r\n        </Box>\r\n        <FormDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          setCodeEntered={setCodeEntered}\r\n          codeEntered={codeEntered}\r\n          changeForm={changeForm}\r\n          errorCode={errorCode}\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/Dialog.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/UserProfile.tsx",["165","166"],[],"import {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport CloseRoundedIcon from '@mui/icons-material/CloseRounded';\r\nimport styled from '@emotion/styled';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ChangePasswordProps } from '../../interfaces/LoginInterface';\r\n\r\nconst CssTextField = styled(TextField)({\r\n  '& .MuiOutlinedInput-root': {\r\n    '& fieldset': {\r\n      borderRadius: '1.2rem',\r\n    },\r\n    borderRadius: '1.2rem',\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const UserProfileDialog = ({ handleClose, open }: Props) => {\r\n  const [openInputs, setOpenInputs] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n    watch,\r\n  } = useForm<ChangePasswordProps>();\r\n\r\n  const onFormSubmit = (data: ChangePasswordProps) => {\r\n    console.log(data);\r\n    // login();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onFormSubmit)} noValidate>\r\n        <Dialog maxWidth=\"xs\" open={open}>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            {!openInputs && (\r\n              <IconButton\r\n                onClick={handleClose}\r\n                sx={{\r\n                  position: 'absolute',\r\n                  left: 270,\r\n                }}\r\n              >\r\n                <CloseRoundedIcon />\r\n              </IconButton>\r\n            )}\r\n            <DialogTitle fontSize={20} fontWeight=\"bold\">\r\n              {openInputs ? 'Cambiar la contraseña' : 'Datos de usuario'}\r\n            </DialogTitle>\r\n          </Box>\r\n          <DialogContent>\r\n            {openInputs ? (\r\n              <Box>\r\n                <CssTextField\r\n                  label=\"Contraseña actual\"\r\n                  style={{ marginBottom: 10 }}\r\n                  type=\"password\"\r\n                  required\r\n                  {...register('password', {\r\n                    required: 'Este campo es obligatorio',\r\n                  })}\r\n                  error={!!errors.password}\r\n                  helperText={errors.password?.message}\r\n                />\r\n                <CssTextField\r\n                  label=\"Contraseña nueva\"\r\n                  style={{ marginBottom: 10 }}\r\n                  type=\"password\"\r\n                  required\r\n                  {...register('newPassword', {\r\n                    required: 'Este campo es obligatorio',\r\n                  })}\r\n                  error={!!errors.newPassword}\r\n                  helperText={errors.newPassword?.message}\r\n                />\r\n                <CssTextField\r\n                  label=\"Repita contraseña\"\r\n                  type=\"password\"\r\n                  required\r\n                  onPaste={(e) => {\r\n                    e.preventDefault();\r\n                    return false;\r\n                  }}\r\n                  {...register('repeatPassword', {\r\n                    required: 'Este campo es obligatorio',\r\n                  })}\r\n                  error={!!errors.repeatPassword}\r\n                  helperText={errors.repeatPassword?.message}\r\n                />\r\n              </Box>\r\n            ) : (\r\n              <DialogContentText\r\n                sx={{\r\n                  display: 'flex',\r\n                }}\r\n              >\r\n                <Box>\r\n                  <Typography fontWeight=\"bold\">Nombre:</Typography>\r\n                  <Typography fontWeight=\"bold\">Apellidos:</Typography>\r\n                  <Typography fontWeight=\"bold\">Email:</Typography>\r\n                </Box>\r\n                <Box px={2}>\r\n                  <Typography>Carlos</Typography>\r\n                  <Typography>López Cano</Typography>\r\n                  <Typography>carlos@gmail.com</Typography>\r\n                </Box>\r\n              </DialogContentText>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {openInputs ? (\r\n              <>\r\n                <Button type=\"submit\">Guardar cambios</Button>\r\n                <Button onClick={() => setOpenInputs(false)} autoFocus>\r\n                  Cancelar\r\n                </Button>\r\n              </>\r\n            ) : (\r\n              <Button onClick={() => setOpenInputs(!openInputs)}>\r\n                Cambiar contraseña\r\n                <EditIcon\r\n                  sx={{\r\n                    fontSize: 20,\r\n                    ml: 1,\r\n                  }}\r\n                />\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","/home/Mohita/app-facecheck-with-reactjs/src/components/spinner/Spinner.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/dialogs/Alert.tsx",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/watch/index.ts",[],[],"/home/Mohita/app-facecheck-with-reactjs/src/components/watch/Watch.jsx",[],[],{"ruleId":"167","severity":1,"message":"168","line":46,"column":9,"nodeType":"169","messageId":"170","endLine":46,"endColumn":17},{"ruleId":"167","severity":1,"message":"171","line":41,"column":5,"nodeType":"169","messageId":"170","endLine":41,"endColumn":10},{"ruleId":"167","severity":1,"message":"172","line":42,"column":5,"nodeType":"169","messageId":"170","endLine":42,"endColumn":10},"@typescript-eslint/no-unused-vars","'navigate' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'watch' is assigned a value but never used."]